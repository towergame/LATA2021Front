{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["OpenableMenus","App","props","map","lineMap","Map","bus","LayerGroup","tram","trolleybus","state","date","Date","hour","getHours","autoHour","currMenu","NONE","setInterval","updateThing","bind","this","L","center","maxBounds","zoom","tileLayer","attribution","minZoom","maxZoom","subdomains","accessToken","addTo","setUpRoutes","fetch","getMonth","getDate","mode","method","then","response","json","clearLayers","forEach","a","id","passengers","relativeActivity","name","longName","num","shortName","type","undefined","shape","showRoute","routeId","routePath","stopPoints","amountsPerStop","push","coord","endRes","lngs","getLatLngs","x","point1","layerPointToLatLng","closestLayerPoint","latLngToLayerPoint","point2","cool","y","indexOf","sort","b","distanceTo","set","length","paintSegments","segmentData","v","k","polyline","color","getColour","weight","opacity","between","colour","amount","colourDiv","split","Error","substring","replace","colourReal","parseInt","setStyle","changeLight","get","options","activity","bindTooltip","sticky","addEventListener","onRouteHoverOn","onRouteHoverOff","addLayer","setState","menuType","ROUTE","document","getElementById","classList","remove","add","TRIP","STOP","className","min","max","value","toISOString","onChange","e","target","checked","valueAsNumber","removeFrom","hidden","onClick","openMenu","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b4ecb6c8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport L, { LatLng, Polyline, LayerGroup, Point, LatLngBounds } from \"leaflet\";\n\ninterface Propane {\n}\n\nenum OpenableMenus {\n\tNONE,\n\tROUTE,\n\tTRIP,\n\tSTOP\n}\n\n\nclass App extends React.Component<Propane, any> {\n\tmap: L.Map | null = null;\n\tlineMap: Map<string, Polyline> = new Map<string, Polyline>();\n\tbus: LayerGroup = new LayerGroup();\n\ttram: LayerGroup = new LayerGroup();\n\ttrolleybus: LayerGroup = new LayerGroup();\n\n\tconstructor(props: Propane) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdate: new Date(\"2021-01-01\"),\n\t\t\thour: new Date().getHours(),\n\t\t\tautoHour: false,\n\t\t\tcurrMenu: OpenableMenus.NONE\n\t\t};\n\t\tsetInterval(this.updateThing.bind(this), 1500);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.map == null) {\n\t\t\tthis.map = L.map('map', {\n\t\t\t\tcenter: [56.95, 24.11],\n\t\t\t\tmaxBounds: [[57.21, 23.20], [56.75, 24.66]],\n\t\t\t\tzoom: 13\n\t\t\t});\n\t\t}\n\t\tlet Jawg_Dark = L.tileLayer('https://{s}.tile.jawg.io/jawg-dark/{z}/{x}/{y}{r}.png?access-token={accessToken}', {\n\t\t\tattribution: '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\" target=\"_blank\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n\t\t\tminZoom: 14,\n\t\t\tmaxZoom: 18,\n\t\t\tsubdomains: 'abcd',\n\t\t\taccessToken: 'iKbn4srGwDR8o2IxGUP8skNZ8T7AVxUrCiBvpwxYzLLRtSGXGhlY9W20wBr182yM'\n\t\t});\n\t\tJawg_Dark.addTo(this.map);\n\t\tthis.setUpRoutes();\n\t}\n\n\tsetUpRoutes() {\n\t\tvar requestInit: RequestInit = {\n\t\t\tmode: \"cors\",\n\t\t\tmethod: \"GET\"\n\t\t};\n\t\tfetch(`https://busify.herokuapp.com/api/activity/routes?month=${(this.state.date as Date).getMonth() + 1}&day=${(this.state.date as Date).getDate()}&hour=${this.state.hour}&client=true&simpleShape=true`, requestInit)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response: any[]) => {\n\t\t\t\tthis.bus.clearLayers();\n\t\t\t\tthis.tram.clearLayers();\n\t\t\t\tthis.trolleybus.clearLayers();\n\t\t\t\tresponse.forEach((a) => {\n\t\t\t\t\tlet id = a.id;\n\t\t\t\t\tlet passengers = a.relativeActivity;\n\t\t\t\t\tlet name = a.longName;\n\t\t\t\t\tlet num = a.shortName;\n\t\t\t\t\tlet type = a.type;\n\t\t\t\t\tif (a.shape === undefined) return;\n\t\t\t\t\tlet shape = a.shape as LatLng[];\n\t\t\t\t\tthis.showRoute(shape, passengers, \"(\" + num + \") \" + name + \"<br/>\" + a.passengers + \" passengers\", id, type);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgenerateStopRoute(routeId: string, routePath: Polyline) {\n\t\tlet stopPoints: LatLng[] = [];\n\t\tlet amountsPerStop: number[] = [];\n\t\tvar requestInit: RequestInit = {\n\t\t\tmode: \"cors\",\n\t\t\tmethod: \"GET\"\n\t\t};\n\t\tfetch(`http://busify.herokuapp.com/api/activity/stops?month=${(this.state.date as Date).getMonth() + 1}&day=${(this.state.date as Date).getDate()}&hour=${this.state.hour}&client=true&route=${routeId}`, requestInit)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response: any[]) => {\n\t\t\t\tresponse.forEach((a) => {\n\t\t\t\t\tstopPoints.push(a.coord as LatLng);\n\t\t\t\t\tamountsPerStop.push(a.relativeActivity);\n\t\t\t\t});\n\t\t\t\treturn \"swag\";\n\t\t\t}).then(a => {\n\t\t\t\tlet endRes = new Map<LatLng[], number>();\n\t\t\t\tlet lngs = routePath.getLatLngs() as LatLng[];\n\t\t\t\tfor (let x = 0; x < stopPoints.length - 1; x++) {\n\t\t\t\t\tlet point1 = this.map!.layerPointToLatLng(routePath.closestLayerPoint(this.map!.latLngToLayerPoint(stopPoints[x + 1])));\n\t\t\t\t\tlet point2 = this.map!.layerPointToLatLng(routePath.closestLayerPoint(this.map!.latLngToLayerPoint(stopPoints[x + 1])));\n\t\t\t\t\tlet cool: LatLng[] = [];\n\t\t\t\t\tfor (let y = lngs.indexOf([...lngs].sort((a, b) => { return point1.distanceTo(a) - point1.distanceTo(b) })[0]); y < lngs.indexOf([...lngs].sort((a, b) => { return point2.distanceTo(a) - point2.distanceTo(b) })[0]) + 1; y++) {\n\t\t\t\t\t\tcool.push(lngs[y]);\n\t\t\t\t\t}\n\t\t\t\t\tendRes.set(cool, amountsPerStop[x]);\n\t\t\t\t}\n\t\t\t\tthis.paintSegments(endRes);\n\t\t\t});\n\t}\n\n\tpaintSegments(segmentData: Map<LatLng[], number>) {\n\t\tsegmentData.forEach((v, k) => {\n\t\t\tlet polyline = L.polyline(k, { color: this.getColour(v), weight: 10, opacity: 0.5 });\n\t\t\tpolyline.addTo(this.map!);\n\t\t\t// this.lineMap.set(id, polyline);\n\t\t});\n\t}\n\n\tgetColour(between: number) {\n\t\treturn \"rgb(\" + (255 * (1 - between)) + \",\" + (255 * between) + \",0)\";\n\t}\n\n\tchangeLight(colour: string, amount: number) {\n\t\tlet colourDiv: string[] = colour.split(',');\n\t\tif (colourDiv.length !== 3) throw new Error(\"Invalid Colour\");\n\t\tcolourDiv[0] = colourDiv[0].substring(4);\n\t\tcolourDiv[2] = colourDiv[2].replace(')', '');\n\t\tlet colourReal: number[] = colourDiv.map(x => parseInt(x));\n\t\tif (amount >= 0) {\n\t\t\treturn `rgb(${colourReal[0] * amount},${colourReal[1] * amount},${colourReal[2] * amount})`;\n\t\t} else {\n\t\t\treturn `rgb(${colourReal[0] / -amount},${colourReal[1] / -amount},${colourReal[2] / -amount})`;\n\t\t}\n\t}\n\n\tonRouteHoverOn(id: string) {\n\t\tthis.lineMap.forEach((v, k) => {\n\t\t\tif (k !== id) {\n\t\t\t\tv.setStyle({\n\t\t\t\t\tcolor: this.changeLight(this.lineMap.get(k)!.options.color!, -2)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tonRouteHoverOff(id: string) {\n\t\tthis.lineMap.forEach((v, k) => {\n\t\t\tif (k !== id) {\n\t\t\t\tv.setStyle({\n\t\t\t\t\tcolor: this.changeLight(this.lineMap.get(k)!.options.color!, 2)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tshowRoute(shape: LatLng[], activity: number, name: string, id: string, type: number) {\n\t\tlet polyline = L.polyline(shape, { color: this.getColour(activity), weight: 10, opacity: 0.5 })\n\t\t\t.bindTooltip(name, { sticky: true });\n\t\tpolyline\n\t\t\t.addEventListener(\"mouseover\", () => { this.onRouteHoverOn(id) })\n\t\t\t.addEventListener(\"mouseout\", () => { this.onRouteHoverOff(id) });\n\t\t//.addEventListener(\"click\", () => { this.generateStopRoute(id, this.lineMap.get(id)!) });\n\t\tthis.lineMap.set(id, polyline);\n\t\tswitch (type) {\n\t\t\tcase 0:\n\t\t\t\tthis.bus.addLayer(polyline);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.trolleybus.addLayer(polyline);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.tram.addLayer(polyline);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tupdateThing() {\n\t\tif (this.state.autoHour) {\n\t\t\tthis.setState({\n\t\t\t\tdate: this.state.date,\n\t\t\t\thour: this.state.hour + 1 > 23 ? 0 : this.state.hour + 1,\n\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\tcurrMenu: this.state.currMenu\n\t\t\t});\n\t\t\tthis.setUpRoutes();\n\t\t}\n\t}\n\n\topenMenu(menuType: OpenableMenus) {\n\t\tswitch (this.state.currMenu) {\n\t\t\tcase OpenableMenus.ROUTE:\n\t\t\t\tdocument.getElementById(\"routeList\")?.classList.remove(\"listOpen\");\n\t\t\t\tdocument.getElementById(\"routeList\")?.classList.add(\"listClose\");\n\t\t\t\tbreak;\n\t\t\tcase OpenableMenus.TRIP:\n\t\t\t\tdocument.getElementById(\"tripList\")?.classList.remove(\"listOpen\");\n\t\t\t\tdocument.getElementById(\"tripList\")?.classList.add(\"listClose\");\n\t\t\t\tbreak;\n\t\t\tcase OpenableMenus.STOP:\n\t\t\t\tdocument.getElementById(\"stopList\")?.classList.remove(\"listOpen\");\n\t\t\t\tdocument.getElementById(\"stopList\")?.classList.add(\"listClose\");\n\t\t\t\tbreak;\n\t\t}\n\t\tif (menuType !== this.state.currMenu) {\n\t\t\tswitch (menuType) {\n\t\t\t\tcase OpenableMenus.ROUTE:\n\t\t\t\t\tdocument.getElementById(\"routeList\")?.classList.remove(\"listClose\");\n\t\t\t\t\tdocument.getElementById(\"routeList\")?.classList.add(\"listOpen\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase OpenableMenus.TRIP:\n\t\t\t\t\tdocument.getElementById(\"tripList\")?.classList.remove(\"listClose\");\n\t\t\t\t\tdocument.getElementById(\"tripList\")?.classList.add(\"listOpen\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase OpenableMenus.STOP:\n\t\t\t\t\tdocument.getElementById(\"stopList\")?.classList.remove(\"listClose\");\n\t\t\t\t\tdocument.getElementById(\"stopList\")?.classList.add(\"listOpen\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tdate: this.state.date,\n\t\t\t\thour: this.state.hour,\n\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\tcurrMenu: menuType\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tdate: this.state.date,\n\t\t\t\thour: this.state.hour,\n\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\tcurrMenu: OpenableMenus.NONE\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div id=\"map\" />\n\t\t\t\t<div id=\"GUI\">\n\t\t\t\t\t<input type=\"date\" id=\"selectDate\" min=\"2021-01-01\" max=\"2021-01-31\" value={this.state.date.toISOString().split('T')[0]} onChange={(e) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdate: new Date(e.target.value!),\n\t\t\t\t\t\t\thour: this.state.hour,\n\t\t\t\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\t\t\t\tcurrMenu: this.state.currMenu\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setUpRoutes();\n\t\t\t\t\t}} />\n\t\t\t\t\t<h1 id=\"time\">{this.state.hour}:00</h1>\n\t\t\t\t\t<input type=\"checkbox\" id=\"autoHour\" value={this.state.autoHour} onChange={(e) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdate: this.state.date,\n\t\t\t\t\t\t\thour: this.state.hour,\n\t\t\t\t\t\t\tautoHour: e.target.checked,\n\t\t\t\t\t\t\tcurrMenu: this.state.currMenu\n\t\t\t\t\t\t});\n\t\t\t\t\t}} />\n\t\t\t\t\t<input type=\"range\" id=\"selectHour\" min={0} max={23} value={this.state.hour} onChange={(e) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdate: this.state.date,\n\t\t\t\t\t\t\thour: e.target.valueAsNumber,\n\t\t\t\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\t\t\t\tcurrMenu: this.state.currMenu\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setUpRoutes();\n\t\t\t\t\t}} />\n\t\t\t\t\t<div id=\"transportTypes\">\n\t\t\t\t\t\tBus <input type=\"checkbox\" onChange={(e) => {\n\t\t\t\t\t\t\tif (e.target.checked) this.bus.addTo(this.map!);\n\t\t\t\t\t\t\telse this.bus.removeFrom(this.map!);\n\t\t\t\t\t\t}} /><br />\n\t\t\t\t\t\tTram <input type=\"checkbox\" onChange={(e) => {\n\t\t\t\t\t\t\tif (e.target.checked) this.tram.addTo(this.map!);\n\t\t\t\t\t\t\telse this.tram.removeFrom(this.map!);\n\t\t\t\t\t\t}} /><br />\n\t\t\t\t\t\tTrolleybus <input type=\"checkbox\" onChange={(e) => {\n\t\t\t\t\t\t\tif (e.target.checked) this.trolleybus.addTo(this.map!);\n\t\t\t\t\t\t\telse this.trolleybus.removeFrom(this.map!);\n\t\t\t\t\t\t}} /><br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"routeList\" className=\"listClose\">\n\t\t\t\t\t\t<input id=\"routeDrawer\" value={\"R\\nO\\nU\\nT\\nE\\nS\"} type=\"button\" hidden onClick={() => { this.openMenu(OpenableMenus.ROUTE) }} />\n\t\t\t\t\t\t<div id=\"actualRouteList\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"tripList\" className=\"listClose\">\n\t\t\t\t\t\t<input id=\"tripDrawer\" value={\"T\\nR\\nI\\nP\\nS\"} type=\"button\" hidden onClick={() => { this.openMenu(OpenableMenus.TRIP) }} />\n\t\t\t\t\t\t<div id=\"actualTripList\">\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"stopList\" className=\"listClose\">\n\t\t\t\t\t\t<input id=\"stopDrawer\" value={\"S\\nT\\nO\\nP\\nS\"} type=\"button\" hidden onClick={() => { this.openMenu(OpenableMenus.STOP) }} />\n\t\t\t\t\t\t<div id=\"actualStopList\">\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}