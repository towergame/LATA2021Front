{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["OpenableMenus","App","props","map","lineMap","Map","bus","LayerGroup","tram","trolleybus","state","date","Date","hour","getHours","autoHour","currMenu","NONE","setInterval","updateThing","bind","this","L","center","maxBounds","zoom","tileLayer","attribution","minZoom","maxZoom","subdomains","accessToken","addTo","setUpRoutes","fetch","getMonth","getDate","method","then","response","json","clearLayers","forEach","a","id","routeId","passengers","relativeActivity","name","longName","num","shortName","type","undefined","shape","showRoute","between","colour","amount","colourDiv","split","length","Error","substring","replace","colourReal","x","parseInt","v","k","setStyle","color","changeLight","get","options","activity","polyline","getColour","weight","opacity","bindTooltip","sticky","addEventListener","onRouteHoverOn","onRouteHoverOff","set","addLayer","setState","menuType","ROUTE","document","getElementById","classList","remove","add","TRIP","STOP","className","min","max","value","toISOString","onChange","e","target","checked","valueAsNumber","removeFrom","hidden","onClick","openMenu","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.18aba36b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport L, { LatLng, Polyline, LayerGroup } from \"leaflet\";\n\ninterface Propane {\n}\n\nenum OpenableMenus {\n\tNONE,\n\tROUTE,\n\tTRIP,\n\tSTOP\n}\n\n\nclass App extends React.Component<Propane, any> {\n\tmap: L.Map | null = null;\n\tlineMap: Map<string, Polyline> = new Map<string, Polyline>();\n\tbus: LayerGroup = new LayerGroup();\n\ttram: LayerGroup = new LayerGroup();\n\ttrolleybus: LayerGroup = new LayerGroup();\n\n\tconstructor(props: Propane) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdate: new Date(\"2021-01-01\"),\n\t\t\thour: new Date().getHours(),\n\t\t\tautoHour: false,\n\t\t\tcurrMenu: OpenableMenus.NONE\n\t\t};\n\t\tsetInterval(this.updateThing.bind(this), 1500);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.map == null) {\n\t\t\tthis.map = L.map('map', {\n\t\t\t\tcenter: [56.95, 24.11],\n\t\t\t\tmaxBounds: [[57.21, 23.20], [56.75, 24.66]],\n\t\t\t\tzoom: 13\n\t\t\t});\n\t\t}\n\t\tlet Jawg_Dark = L.tileLayer('https://{s}.tile.jawg.io/jawg-dark/{z}/{x}/{y}{r}.png?access-token={accessToken}', {\n\t\t\tattribution: '<a href=\"http://jawg.io\" title=\"Tiles Courtesy of Jawg Maps\" target=\"_blank\">&copy; <b>Jawg</b>Maps</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n\t\t\tminZoom: 14,\n\t\t\tmaxZoom: 18,\n\t\t\tsubdomains: 'abcd',\n\t\t\taccessToken: 'iKbn4srGwDR8o2IxGUP8skNZ8T7AVxUrCiBvpwxYzLLRtSGXGhlY9W20wBr182yM'\n\t\t});\n\t\tJawg_Dark.addTo(this.map);\n\t\tthis.setUpRoutes();\n\t}\n\n\tsetUpRoutes() {\n\t\tvar requestInit: RequestInit = {\n\t\t\t// mode: \"cors\",\n\t\t\tmethod: \"GET\"\n\t\t};\n\t\tfetch(`http://busify.herokuapp.com/api/activity/routes?month=${(this.state.date as Date).getMonth() + 1}&day=${(this.state.date as Date).getDate()}&hour=${this.state.hour}&client=true&simpleShape=true`, requestInit)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response: any[]) => {\n\t\t\t\tthis.bus.clearLayers();\n\t\t\t\tthis.tram.clearLayers();\n\t\t\t\tthis.trolleybus.clearLayers();\n\t\t\t\tresponse.forEach((a) => {\n\t\t\t\t\tlet id = a.routeId;\n\t\t\t\t\tlet passengers = a.relativeActivity;\n\t\t\t\t\tlet name = a.longName;\n\t\t\t\t\tlet num = a.shortName;\n\t\t\t\t\tlet type = a.type;\n\t\t\t\t\tif (a.shape === undefined) return;\n\t\t\t\t\tlet shape = a.shape as LatLng[];\n\t\t\t\t\tthis.showRoute(shape, passengers, \"(\" + num + \") \" + name + \"<br/>\" + a.passengers + \" passengers\", id, type);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgetColour(between: number) {\n\t\treturn \"rgb(\" + (255 * (1 - between)) + \",\" + (255 * between) + \",0)\";\n\t}\n\n\tchangeLight(colour: string, amount: number) {\n\t\tlet colourDiv: string[] = colour.split(',');\n\t\tif (colourDiv.length !== 3) throw new Error(\"Invalid Colour\");\n\t\tcolourDiv[0] = colourDiv[0].substring(4);\n\t\tcolourDiv[2] = colourDiv[2].replace(')', '');\n\t\tlet colourReal: number[] = colourDiv.map(x => parseInt(x));\n\t\tif (amount >= 0) {\n\t\t\treturn `rgb(${colourReal[0] * amount},${colourReal[1] * amount},${colourReal[2] * amount})`;\n\t\t} else {\n\t\t\treturn `rgb(${colourReal[0] / -amount},${colourReal[1] / -amount},${colourReal[2] / -amount})`;\n\t\t}\n\t}\n\n\tonRouteHoverOn(id: string) {\n\t\tthis.lineMap.forEach((v, k) => {\n\t\t\tif (k !== id) {\n\t\t\t\tv.setStyle({\n\t\t\t\t\tcolor: this.changeLight(this.lineMap.get(k)!.options.color!, -2)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tonRouteHoverOff(id: string) {\n\t\tthis.lineMap.forEach((v, k) => {\n\t\t\tif (k !== id) {\n\t\t\t\tv.setStyle({\n\t\t\t\t\tcolor: this.changeLight(this.lineMap.get(k)!.options.color!, 2)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tshowRoute(shape: LatLng[], activity: number, name: string, id: string, type: number) {\n\t\tlet polyline = L.polyline(shape, { color: this.getColour(activity), weight: 10, opacity: 0.5 })\n\t\t\t.bindTooltip(name, { sticky: true });\n\t\tpolyline\n\t\t\t.addEventListener(\"mouseover\", () => { this.onRouteHoverOn(id) })\n\t\t\t.addEventListener(\"mouseout\", () => { this.onRouteHoverOff(id) });\n\t\tthis.lineMap.set(id, polyline);\n\t\tswitch (type) {\n\t\t\tcase 0:\n\t\t\t\tthis.bus.addLayer(polyline);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.trolleybus.addLayer(polyline);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.tram.addLayer(polyline);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tupdateThing() {\n\t\tif (this.state.autoHour) {\n\t\t\tthis.setState({\n\t\t\t\tdate: this.state.date,\n\t\t\t\thour: this.state.hour + 1 > 23 ? 0 : this.state.hour + 1,\n\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\tcurrMenu: this.state.currMenu\n\t\t\t});\n\t\t\tthis.setUpRoutes();\n\t\t}\n\t}\n\n\topenMenu(menuType: OpenableMenus) {\n\t\tswitch (this.state.currMenu) {\n\t\t\tcase OpenableMenus.ROUTE:\n\t\t\t\tdocument.getElementById(\"routeList\")?.classList.remove(\"listOpen\");\n\t\t\t\tdocument.getElementById(\"routeList\")?.classList.add(\"listClose\");\n\t\t\t\tbreak;\n\t\t\tcase OpenableMenus.TRIP:\n\t\t\t\tdocument.getElementById(\"tripList\")?.classList.remove(\"listOpen\");\n\t\t\t\tdocument.getElementById(\"tripList\")?.classList.add(\"listClose\");\n\t\t\t\tbreak;\n\t\t\tcase OpenableMenus.STOP:\n\t\t\t\tdocument.getElementById(\"stopList\")?.classList.remove(\"listOpen\");\n\t\t\t\tdocument.getElementById(\"stopList\")?.classList.add(\"listClose\");\n\t\t\t\tbreak;\n\t\t}\n\t\tif (menuType !== this.state.currMenu) {\n\t\t\tswitch (menuType) {\n\t\t\t\tcase OpenableMenus.ROUTE:\n\t\t\t\t\tdocument.getElementById(\"routeList\")?.classList.remove(\"listClose\");\n\t\t\t\t\tdocument.getElementById(\"routeList\")?.classList.add(\"listOpen\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase OpenableMenus.TRIP:\n\t\t\t\t\tdocument.getElementById(\"tripList\")?.classList.remove(\"listClose\");\n\t\t\t\t\tdocument.getElementById(\"tripList\")?.classList.add(\"listOpen\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase OpenableMenus.STOP:\n\t\t\t\t\tdocument.getElementById(\"stopList\")?.classList.remove(\"listClose\");\n\t\t\t\t\tdocument.getElementById(\"stopList\")?.classList.add(\"listOpen\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tdate: this.state.date,\n\t\t\t\thour: this.state.hour,\n\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\tcurrMenu: menuType\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tdate: this.state.date,\n\t\t\t\thour: this.state.hour,\n\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\tcurrMenu: OpenableMenus.NONE\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div id=\"map\" />\n\t\t\t\t<div id=\"GUI\">\n\t\t\t\t\t<input type=\"date\" id=\"selectDate\" min=\"2021-01-01\" max=\"2021-01-31\" value={this.state.date.toISOString().split('T')[0]} onChange={(e) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdate: new Date(e.target.value!),\n\t\t\t\t\t\t\thour: this.state.hour,\n\t\t\t\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\t\t\t\tcurrMenu: this.state.currMenu\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setUpRoutes();\n\t\t\t\t\t}} />\n\t\t\t\t\t<h1 id=\"time\">{this.state.hour}:00</h1>\n\t\t\t\t\t<input type=\"checkbox\" id=\"autoHour\" value={this.state.autoHour} onChange={(e) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdate: this.state.date,\n\t\t\t\t\t\t\thour: this.state.hour,\n\t\t\t\t\t\t\tautoHour: e.target.checked,\n\t\t\t\t\t\t\tcurrMenu: this.state.currMenu\n\t\t\t\t\t\t});\n\t\t\t\t\t}} />\n\t\t\t\t\t<input type=\"range\" id=\"selectHour\" min={0} max={23} value={this.state.hour} onChange={(e) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tdate: this.state.date,\n\t\t\t\t\t\t\thour: e.target.valueAsNumber,\n\t\t\t\t\t\t\tautoHour: this.state.autoHour,\n\t\t\t\t\t\t\tcurrMenu: this.state.currMenu\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.setUpRoutes();\n\t\t\t\t\t}} />\n\t\t\t\t\t<div id=\"transportTypes\">\n\t\t\t\t\t\tBus <input type=\"checkbox\" onChange={(e) => {\n\t\t\t\t\t\t\tif (e.target.checked) this.bus.addTo(this.map!);\n\t\t\t\t\t\t\telse this.bus.removeFrom(this.map!);\n\t\t\t\t\t\t}} /><br />\n\t\t\t\t\t\tTram <input type=\"checkbox\" onChange={(e) => {\n\t\t\t\t\t\t\tif (e.target.checked) this.tram.addTo(this.map!);\n\t\t\t\t\t\t\telse this.tram.removeFrom(this.map!);\n\t\t\t\t\t\t}} /><br />\n\t\t\t\t\t\tTrolleybus <input type=\"checkbox\" onChange={(e) => {\n\t\t\t\t\t\t\tif (e.target.checked) this.trolleybus.addTo(this.map!);\n\t\t\t\t\t\t\telse this.trolleybus.removeFrom(this.map!);\n\t\t\t\t\t\t}} /><br />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"routeList\" className=\"listClose\">\n\t\t\t\t\t\t<input id=\"routeDrawer\" value={\"R\\nO\\nU\\nT\\nE\\nS\"} type=\"button\" hidden onClick={() => { this.openMenu(OpenableMenus.ROUTE) }} />\n\t\t\t\t\t\t<div id=\"actualRouteList\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"tripList\" className=\"listClose\">\n\t\t\t\t\t\t<input id=\"tripDrawer\" value={\"T\\nR\\nI\\nP\\nS\"} type=\"button\" hidden onClick={() => { this.openMenu(OpenableMenus.TRIP) }} />\n\t\t\t\t\t\t<div id=\"actualTripList\">\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"stopList\" className=\"listClose\">\n\t\t\t\t\t\t<input id=\"stopDrawer\" value={\"S\\nT\\nO\\nP\\nS\"} type=\"button\" hidden onClick={() => { this.openMenu(OpenableMenus.STOP) }} />\n\t\t\t\t\t\t<div id=\"actualStopList\">\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}